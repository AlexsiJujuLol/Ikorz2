local TweenService = game:GetService("TweenService")
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

local screenGui = Instance.new("ScreenGui")
screenGui.Name = "EnhancedUI"
screenGui.ResetOnSpawn = false
screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
screenGui.Parent = playerGui

-- Main Frame
local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0, 500, 0, 350)
mainFrame.Position = UDim2.new(0.5, -250, 0.5, -175)
mainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 40)
mainFrame.BackgroundTransparency = 0.1
mainFrame.Visible = false
mainFrame.Parent = screenGui

local mainUICorner = Instance.new("UICorner", mainFrame)
mainUICorner.CornerRadius = UDim.new(0, 12)

local mainUIStroke = Instance.new("UIStroke", mainFrame)
mainUIStroke.Color = Color3.fromRGB(60, 60, 80)
mainUIStroke.Thickness = 2

local mainUIGradient = Instance.new("UIGradient", mainFrame)
mainUIGradient.Color = ColorSequence.new({
	ColorSequenceKeypoint.new(0, Color3.fromRGB(30, 30, 40)),
	ColorSequenceKeypoint.new(1, Color3.fromRGB(40, 40, 60))
})
mainUIGradient.Rotation = 90

-- Title Bar (Draggable)
local titleBar = Instance.new("Frame")
titleBar.Size = UDim2.new(1, 0, 0, 40)
titleBar.BackgroundColor3 = Color3.fromRGB(40, 40, 50)
titleBar.BackgroundTransparency = 0.1
titleBar.Parent = mainFrame

local titleLabel = Instance.new("TextLabel")
titleLabel.Size = UDim2.new(1, -50, 1, 0)
titleLabel.Position = UDim2.new(0, 10, 0, 0)
titleLabel.BackgroundTransparency = 1
titleLabel.Font = Enum.Font.GothamBold
titleLabel.Text = "Enhanced UI"
titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
titleLabel.TextSize = 20
titleLabel.TextXAlignment = Enum.TextXAlignment.Left
titleLabel.Parent = titleBar

local closeButton = Instance.new("TextButton")
closeButton.Size = UDim2.new(0, 30, 0, 30)
closeButton.Position = UDim2.new(1, -40, 0, 5)
closeButton.BackgroundColor3 = Color3.fromRGB(220, 60, 60)
closeButton.Text = "X"
closeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
closeButton.Font = Enum.Font.GothamBold
closeButton.TextSize = 18
closeButton.Parent = titleBar
local closeCorner = Instance.new("UICorner", closeButton)
closeCorner.CornerRadius = UDim.new(0, 15)

-- Content Area
local contentArea = Instance.new("Frame")
contentArea.Size = UDim2.new(1, -20, 1, -60)
contentArea.Position = UDim2.new(0, 10, 0, 50)
contentArea.BackgroundTransparency = 1
contentArea.Parent = mainFrame

-- Toggle Button
local toggleButton = Instance.new("ImageButton")
toggleButton.Size = UDim2.new(0, 60, 0, 60)
toggleButton.Position = UDim2.new(1, -80, 1, -80)
toggleButton.BackgroundColor3 = Color3.fromRGB(70, 70, 90)
toggleButton.Image = "rbxassetid://3926305904"
toggleButton.ImageRectOffset = Vector2.new(324, 524)
toggleButton.ImageRectSize = Vector2.new(36, 36)
toggleButton.Parent = screenGui
toggleButton.Visible = false
local toggleCorner = Instance.new("UICorner", toggleButton)
toggleCorner.CornerRadius = UDim.new(1, 0)

-- Key System Frame
local keyFrame = Instance.new("Frame")
keyFrame.Size = UDim2.new(0, 350, 0, 220)
keyFrame.Position = UDim2.new(0.5, -175, 0.5, -110)
keyFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 40)
keyFrame.BackgroundTransparency = 0.1
keyFrame.Parent = screenGui

local keyUICorner = Instance.new("UICorner", keyFrame)
keyUICorner.CornerRadius = UDim.new(0, 12)

local keyLabel = Instance.new("TextLabel")
keyLabel.Size = UDim2.new(1, 0, 0.25, 0)
keyLabel.BackgroundTransparency = 1
keyLabel.Text = "Enter Key to Access UI"
keyLabel.Font = Enum.Font.GothamBold
keyLabel.TextSize = 20
keyLabel.TextColor3 = Color3.fromRGB(255,255,255)
keyLabel.Parent = keyFrame

local keyBox = Instance.new("TextBox")
keyBox.Size = UDim2.new(0.8, 0, 0.2, 0)
keyBox.Position = UDim2.new(0.1, 0, 0.35, 0)
keyBox.BackgroundColor3 = Color3.fromRGB(40, 40, 50)
keyBox.TextColor3 = Color3.fromRGB(255, 255, 255)
keyBox.Font = Enum.Font.Gotham
keyBox.TextSize = 16
keyBox.PlaceholderText = "Enter Key Here"
keyBox.Parent = keyFrame
local keyBoxCorner = Instance.new("UICorner", keyBox)
keyBoxCorner.CornerRadius = UDim.new(0, 8)

local submitButton = Instance.new("TextButton")
submitButton.Size = UDim2.new(0.8, 0, 0.2, 0)
submitButton.Position = UDim2.new(0.1, 0, 0.65, 0)
submitButton.BackgroundColor3 = Color3.fromRGB(60, 60, 80)
submitButton.Text = "Submit"
submitButton.TextColor3 = Color3.fromRGB(255,255,255)
submitButton.Font = Enum.Font.GothamBold
submitButton.TextSize = 18
submitButton.Parent = keyFrame
local submitCorner = Instance.new("UICorner", submitButton)
submitCorner.CornerRadius = UDim.new(0, 8)

-- Loading Indicator
local loadingFrame = Instance.new("Frame")
loadingFrame.Size = UDim2.new(1, 0, 1, 0)
loadingFrame.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
loadingFrame.BackgroundTransparency = 0.7
loadingFrame.Visible = false
loadingFrame.Parent = screenGui

local loadingText = Instance.new("TextLabel")
loadingText.Size = UDim2.new(1, 0, 0, 40)
loadingText.Position = UDim2.new(0, 0, 0.5, -20)
loadingText.BackgroundTransparency = 1
loadingText.Font = Enum.Font.GothamBold
loadingText.TextSize = 24
loadingText.TextColor3 = Color3.fromRGB(255, 255, 255)
loadingText.Text = "Loading..."
loadingText.Parent = loadingFrame

local loadingIcon = Instance.new("ImageLabel")
loadingIcon.Size = UDim2.new(0, 50, 0, 50)
loadingIcon.Position = UDim2.new(0.5, -25, 0.5, -65)
loadingIcon.BackgroundTransparency = 1
loadingIcon.Image = "rbxassetid://3926305904"
loadingIcon.ImageRectOffset = Vector2.new(204, 764)
loadingIcon.ImageRectSize = Vector2.new(36, 36)
loadingIcon.Parent = loadingFrame

local function showLoading()
	loadingFrame.Visible = true
	loadingFrame.BackgroundTransparency = 1
	loadingText.TextTransparency = 1
	loadingIcon.ImageTransparency = 1
	TweenService:Create(loadingFrame, TweenInfo.new(0.3), {BackgroundTransparency = 0.7}):Play()
	TweenService:Create(loadingText, TweenInfo.new(0.3), {TextTransparency = 0}):Play()
	TweenService:Create(loadingIcon, TweenInfo.new(0.3), {ImageTransparency = 0}):Play()
	spawn(function()
		while loadingFrame.Visible do
			TweenService:Create(loadingIcon, TweenInfo.new(1, Enum.EasingStyle.Linear), {Rotation = loadingIcon.Rotation + 360}):Play()
			wait(1)
		end
	end)
	spawn(function()
		local dots = {".", "..", "..."}
		local index = 1
		while loadingFrame.Visible do
			loadingText.Text = "Loading" .. dots[index]
			index = index % 3 + 1
			wait(0.5)
		end
	end)
end

local function hideLoading()
	TweenService:Create(loadingFrame, TweenInfo.new(0.3), {BackgroundTransparency = 1}):Play()
	TweenService:Create(loadingText, TweenInfo.new(0.3), {TextTransparency = 1}):Play()
	TweenService:Create(loadingIcon, TweenInfo.new(0.3), {ImageTransparency = 1}):Play()
	wait(0.3)
	loadingFrame.Visible = false
end

-- Key validation and UI entrance
local validKey = "T9gLx3A8jK1YqH5X"
local function validateKey(input)
	if input == validKey then
		TweenService:Create(keyFrame, TweenInfo.new(0.5, Enum.EasingStyle.Back, Enum.EasingDirection.In), {Size = UDim2.new(0, 0, 0, 0), BackgroundTransparency = 1}):Play()
		TweenService:Create(keyLabel, TweenInfo.new(0.5), {TextTransparency = 1}):Play()
		TweenService:Create(keyBox, TweenInfo.new(0.5), {BackgroundTransparency = 1, TextTransparency = 1}):Play()
		TweenService:Create(submitButton, TweenInfo.new(0.5), {BackgroundTransparency = 1, TextTransparency = 1}):Play()
		wait(0.6)
		keyFrame.Visible = false
		mainFrame.Visible = true
		toggleButton.Visible = true
		mainFrame.Size = UDim2.new(0, 0, 0, 0)
		mainFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
		mainFrame.BackgroundTransparency = 1
		TweenService:Create(mainFrame, TweenInfo.new(0.7, Enum.EasingStyle.Back, Enum.EasingDirection.Out), {
			Size = UDim2.new(0, 500, 0, 350),
			Position = UDim2.new(0.5, -250, 0.5, -175),
			BackgroundTransparency = 0.1
		}):Play()
	else
		keyLabel.Text = "Invalid Key! Try Again."
		TweenService:Create(keyFrame, TweenInfo.new(0.2, Enum.EasingStyle.Bounce), {Rotation = 5}):Play()
		wait(0.2)
		TweenService:Create(keyFrame, TweenInfo.new(0.2, Enum.EasingStyle.Bounce), {Rotation = -5}):Play()
		wait(0.2)
		TweenService:Create(keyFrame, TweenInfo.new(0.2, Enum.EasingStyle.Bounce), {Rotation = 0}):Play()
		keyLabel.Text = "Enter Key to Access UI"
	end
	keyBox.Text = ""
end

submitButton.MouseButton1Click:Connect(function()
	validateKey(keyBox.Text)
end)
keyBox.FocusLost:Connect(function(enterPressed)
	if enterPressed then
		validateKey(keyBox.Text)
	end
end)

closeButton.MouseButton1Click:Connect(function()
	TweenService:Create(mainFrame, TweenInfo.new(0.5, Enum.EasingStyle.Back, Enum.EasingDirection.In), {
		Size = UDim2.new(0, 0, 0, 0),
		Position = UDim2.new(0.5, 0, 0.5, 0),
		BackgroundTransparency = 1
	}):Play()
	wait(0.5)
	mainFrame.Visible = false
end)

toggleButton.MouseButton1Click:Connect(function()
	if mainFrame.Visible then
		TweenService:Create(mainFrame, TweenInfo.new(0.5, Enum.EasingStyle.Back, Enum.EasingDirection.In), {
			Size = UDim2.new(0, 0, 0, 0),
			Position = UDim2.new(0.5, 0, 0.5, 0),
			BackgroundTransparency = 1
		}):Play()
		wait(0.5)
		mainFrame.Visible = false
	else
		mainFrame.Size = UDim2.new(0, 0, 0, 0)
		mainFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
		mainFrame.BackgroundTransparency = 1
		mainFrame.Visible = true
		TweenService:Create(mainFrame, TweenInfo.new(0.5, Enum.EasingStyle.Back, Enum.EasingDirection.Out), {
			Size = UDim2.new(0, 500, 0, 350),
			Position = UDim2.new(0.5, -250, 0.5, -175),
			BackgroundTransparency = 0.1
		}):Play()
	end
end)

-- Draggable Title Bar
local dragging, dragInput, dragStart, startPos
titleBar.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
		dragging = true
		dragStart = input.Position
		startPos = mainFrame.Position
		input.Changed:Connect(function()
			if input.UserInputState == Enum.UserInputState.End then
				dragging = false
			end
		end)
	end
end)
UserInputService.InputChanged:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
		dragInput = input
	end
end)
UserInputService.InputChanged:Connect(function(input)
	if input == dragInput and dragging then
		local delta = input.Position - dragStart
		TweenService:Create(mainFrame, TweenInfo.new(0.1, Enum.EasingStyle.Sine), {
			Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
		}):Play()
	end
end)

-- Enhanced Ripple Effect for Buttons
local function createRipple(parent, inputPos)
	local ripple = Instance.new("Frame")
	ripple.BorderSizePixel = 0
	ripple.BackgroundColor3 = Color3.fromRGB(255,255,255)
	ripple.BackgroundTransparency = 0.7
	ripple.AnchorPoint = Vector2.new(0.5, 0.5)
	ripple.Parent = parent
	local rUICorner = Instance.new("UICorner", ripple)
	rUICorner.CornerRadius = UDim.new(1,0)
	local absSize = parent.AbsoluteSize
	local maxDim = math.max(absSize.X, absSize.Y) * 1.5
	local pos = UDim2.new(0, inputPos.X - parent.AbsolutePosition.X, 0, inputPos.Y - parent.AbsolutePosition.Y)
	ripple.Position = pos
	ripple.Size = UDim2.new(0, 0, 0, 0)
	local tween = TweenService:Create(ripple, TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
		Size = UDim2.new(0, maxDim, 0, maxDim),
		BackgroundTransparency = 1
	})
	tween:Play()
	tween.Completed:Connect(function()
		ripple:Destroy()
	end)
end

local function addRippleEffect(button)
	button.MouseButton1Down:Connect(function(x, y)
		createRipple(button, Vector2.new(x, y))
	end)
end

addRippleEffect(submitButton)

-- Pulse Animation for Toggle Button
local function pulseButton(button)
	while true do
		TweenService:Create(button, TweenInfo.new(1, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), {Size = UDim2.new(0, 65, 0, 65)}):Play()
		wait(1)
		TweenService:Create(button, TweenInfo.new(1, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), {Size = UDim2.new(0, 60, 0, 60)}):Play()
		wait(1)
	end
end
spawn(function() pulseButton(toggleButton) end)

local versionLabel = Instance.new("TextLabel", mainFrame)
versionLabel.Size = UDim2.new(1, 0, 0, 20)
versionLabel.Position = UDim2.new(0, 0, 1, -20)
versionLabel.BackgroundTransparency = 1
versionLabel.Font = Enum.Font.Gotham
versionLabel.TextSize = 12
versionLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
versionLabel.Text = "v1.1.0 | Created by Ikorz"
TweenService:Create(versionLabel, TweenInfo.new(1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {TextTransparency = 0}):Play()

--------------------------------------------------------------------------------
-- Added Toggle Blade Ball Button
-- This button will display a loading animation, execute the Blade Ball script, and hide the loading.
--------------------------------------------------------------------------------

local toggleBladeBallButton = Instance.new("TextButton")
toggleBladeBallButton.Size = UDim2.new(0, 200, 0, 40)
toggleBladeBallButton.Position = UDim2.new(0, 10, 0, 10)  -- Adjust as needed within contentArea
toggleBladeBallButton.BackgroundColor3 = Color3.fromRGB(80, 80, 100)
toggleBladeBallButton.Text = "Toggle Blade Ball"
toggleBladeBallButton.TextColor3 = Color3.fromRGB(255, 255, 255)
toggleBladeBallButton.Font = Enum.Font.GothamBold
toggleBladeBallButton.TextSize = 16
toggleBladeBallButton.Parent = contentArea

toggleBladeBallButton.MouseButton1Click:Connect(function()
    showLoading()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/AlexsiJujuLol/skills-introduction-to-github/main/Ui%20lib%20ikorz", true))()
    hideLoading()
end)
